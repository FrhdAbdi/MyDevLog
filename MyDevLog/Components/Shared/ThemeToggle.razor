@inject IJSRuntime JSRuntime

<button class="theme-toggle" @onclick="ToggleTheme" title="Toggle theme">
    @if (isDarkMode)
    {
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path></svg>
    }
    else
    {
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="5"></circle><line x1="12" y1="1" x2="12" y2="3"></line><line x1="12" y1="21" x2="12" y2="23"></line><line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line><line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line><line x1="1" y1="12" x2="3" y2="12"></line><line x1="21" y1="12" x2="23" y2="12"></line><line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line><line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line></svg>
    }
</button>

@code {
    private bool isDarkMode = true;
    private IJSObjectReference? module;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            module = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./js/theme.js");
            var initialTheme = await module.InvokeAsync<string>("getInitialTheme");
            isDarkMode = initialTheme == "dark";
            await module.InvokeVoidAsync("applyTheme", initialTheme);
            StateHasChanged();
        }
    }

    private async Task ToggleTheme()
    {
        if (module is null) return;
        isDarkMode = !isDarkMode;
        var newTheme = isDarkMode ? "dark" : "light";
        await module.InvokeVoidAsync("setThemeInStorage", newTheme);
        await module.InvokeVoidAsync("applyTheme", newTheme);
    }
}