@using MyDevLog.DTO
@using MyDevLog.Data
@inject IHttpClientFactory HttpClientFactory


<div class="latest-posts">
    <div class="latest-posts-header">
        <h3>Latest Posts</h3>
        <a href="/posts" class="view-all-link">View all posts →</a>
    </div>

    @if (latestPosts == null)
    {
        <p><em>There are no posts yet...</em></p>
    }
    else
    {
        <div class="posts-grid">
            @foreach (var post in latestPosts)
            {
                <a href="/post/@post.Id" class="post-card-link">
                    <div class="post-card glass-effect">                        
                        <div class="post-card-content">
                            <h4>@post.Title</h4>
                            <p>@post.Summary</p>
                        </div>
                    </div>
                </a>
            }
        </div>
    }
</div>


@code {
    private PostSummaryDTO[]? latestPosts;

    protected override async Task OnInitializedAsync()
    {
        var client = HttpClientFactory.CreateClient("WebAPI");

        try
        {
            latestPosts = await client.GetFromJsonAsync<PostSummaryDTO[]>($"api/posts/latest");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching latest posts: {ex.Message}");
        }
    }
}
